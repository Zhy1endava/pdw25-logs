
# Set the internal status logging level
status = warn
name = log4j2

# Appenders
appenders=console,routedFile

# Console appender
# If no log.level is provided only ERROR messages will be printed to console
appender.console.type = Console
appender.console.name = ConsoleAppender
appender.console.filter.threshold.type = ThresholdFilter
appender.console.filter.threshold.level = ${sys:log.level:-ERROR}
appender.console.target = SYSTEM_OUT
appender.console.layout.type = PatternLayout
appender.console.layout.pattern = %d{HH:mm:ss.SSS zzz} %5p %c{1}:%L - %m%n
#appender.console.layout.pattern = %d{HH:mm:ss.SSS zzz} %5p ${ctx:testName} %c{1}:%L - %m%n

# Routing appender
# Added to be able to route logs for each test to a separate file, when DebugLogListener is used
appender.routedFile.type = Routing
appender.routedFile.name = TestLogRouter
appender.routedFile.filter.threshold.type = ThresholdFilter
appender.routedFile.filter.threshold.level = ${sys:log.level:-OFF}
appender.routedFile.routes.type = Routes
appender.routedFile.routes.pattern = $${ctx:testName}

# Routed file appender (per test)
appender.routedFile.routes.route1.type = Route
appender.routedFile.routes.route1.rolling.type = RollingFile
appender.routedFile.routes.route1.rolling.name = TestRollingFile
appender.routedFile.routes.route1.rolling.fileName = ./logs/${ctx:testName:-selenium-logs}.log
appender.routedFile.routes.route1.rolling.filePattern = ./logs/${ctx:testName:-selenium-logs}-%d{yyyy-MM-dd}.log
appender.routedFile.routes.route1.rolling.append = false
appender.routedFile.routes.route1.rolling.layout.type = PatternLayout
appender.routedFile.routes.route1.rolling.layout.pattern = %d{yyyy-MM-dd HH:mm:ss.SSS zzz} [%t] %5p %c{1}:%L - %m%n
appender.routedFile.routes.route1.rolling.policies.type = Policies

# Log rotation (size-based to have no files larger than 10MB)
appender.routedFile.routes.route1.rolling.policies.size.type = SizeBasedTriggeringPolicy
appender.routedFile.routes.route1.rolling.policies.size.size = 10239KB

# Log rotation (time-based to create new file for each day locally - can be removed)
appender.routedFile.routes.route1.rolling.policies.time.type = TimeBasedTriggeringPolicy
appender.routedFile.routes.route1.rolling.policies.time.interval = 1

# Loggers

# Root logger
rootLogger.level = ${sys:log.level:-ERROR}
rootLogger.appenderRefs = console, routedFile
rootLogger.appenderRef.console.ref = ConsoleAppender
rootLogger.appenderRef.routedFile.ref = TestLogRouter

# Specific Logger Configuration (Example: Selenium CDP)
logger.seleniumCdp.name = org.openqa.selenium.devtools.CdpVersionFinder
logger.seleniumCdp.level = DEBUG
logger.seleniumCdp.additivity = false
logger.seleniumCdp.appenderRef.cdpConsoleRef.ref = ConsoleAppender

logger.testngUtils.name = org.testng
logger.testngUtils.level = OFF
logger.testngUtils.additivity = false
logger.testngUtils.appenderRef.cdpConsoleRef.ref = TestLogRouter